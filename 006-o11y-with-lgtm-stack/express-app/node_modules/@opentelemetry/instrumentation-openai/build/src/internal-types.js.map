{"version":3,"file":"internal-types.js","sourceRoot":"","sources":["../../src/internal-types.ts"],"names":[],"mappings":"","sourcesContent":["/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { AnyValue } from '@opentelemetry/api-logs';\n\n// This mimicks `APIPromise` from `openai` sufficiently for usage in this\n// instrumentation. OpenAI's APIPromise adds some methods, but we don't use\n// those. We don't import the type directly from `openai` because how to\n// import it has changed between openai@4 and openai@5.\nexport type APIPromise<T> = Promise<T>;\n\nexport type GenAIFunction = {\n  name: string;\n  arguments?: AnyValue;\n};\n\nexport type GenAIToolCall = {\n  id: string;\n  type: string;\n  function?: GenAIFunction;\n};\n\nexport type GenAIMessage = {\n  role?: string;\n  content?: AnyValue;\n  tool_calls?: GenAIToolCall[];\n};\n\nexport type GenAIChoiceEventBody = {\n  finish_reason: string;\n  index: number;\n  message: GenAIMessage;\n};\n\nexport type GenAISystemMessageEventBody = {\n  role?: string;\n  content?: AnyValue;\n};\n\nexport type GenAIUserMessageEventBody = {\n  role?: string;\n  content?: AnyValue;\n};\n\nexport type GenAIAssistantMessageEventBody = {\n  role?: string;\n  content?: AnyValue;\n  tool_calls?: GenAIToolCall[];\n};\n\nexport type GenAIToolMessageEventBody = {\n  role?: string;\n  content?: AnyValue;\n  id: string;\n};\n"]}